/*
*
* This program calculates the AVERAGE, MINIMUM and MAXIMUM values from the array using the concepts of thread. All three respective 
* values are returned to the main and get printed over there.
*
*/


#include<stdio.h>
#include<unistd.h>
#include<pthread.h>
#include<stdlib.h>
#include<sys/wait.h>

int n;

void *findAvg(void *arr){
  int *a = (int *)arr;
  int sum = 0;
  int i;
  for( i = 0; i < n; i++){
    sum += *(a+i);
  }
  pthread_exit((void *)sum);
}

void *findMin(void *arr){
  int *a = (int *)arr;
  int min = *a;
  int i;
  for( i = 1; i < n; i++){
    if(*(a+i) < min)
      min  = *(a+i);
  }
  pthread_exit((void *)min);
}

void *findMax(void *arr){
  int *a = (int *)arr;
    int max = *a;
    int i;
    for( i = 1; i < n; i++){
      if(*(a+i) > max)
        max  = *(a+i);
    }
    pthread_exit((void *)max);
}

// MAIN METHOD
int main(){
  pthread_t th1,th2,th3;
  printf("Enter number of elements : ");
  scanf("%d",&n);
  
  int arr[n], i;
  for(i = 0; i < n; i++)
      scanf("%d",&arr[i]);

  pthread_create(&th1,NULL,findAvg,&arr);
  pthread_create(&th2,NULL,findMin,&arr);
  pthread_create(&th3,NULL,findMax,&arr);
  
  void *a = NULL;
  void *b = NULL;
  void *c = NULL;
  
  pthread_join(th1,&a);
  pthread_join(th2,&b);
  pthread_join(th3,&c);
  
  float avg=floatt(a)/n;

  printf("Average value of the array is : %f", avg);
  printf("Minimum value of the array is : %d", (int)b);
  printf("Maximum value of the array is : %d", (int)c);
  exit(0);
}
